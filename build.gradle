import groovy.io.FileType

// now run
// groovy dependencies.groovy '.*acquisition.*' && dot tmp.gv -Tsvg > tmp.svg

task createDependencyGraph(type: CreateDependencyGraph) {
	List<File> pomFiles = []
	new File(rootDirOfProjectToSearch).eachFile(FileType.DIRECTORIES) { module ->
	    pomFiles << new File(module.absolutePath + '/pom.xml')
	}

	dependencyGatherer = new MavenDependencyGatherer(pomFiles: pomFiles, dependencyRegex: dependencyRegex)
	translator = new DependencyToDotLanguageTranslator()
	fileCreator = new GraphvizDotfileCreator()
}

class CreateDependencyGraph extends DefaultTask {
	DependencyGatherer dependencyGatherer
	DependencyToDotLanguageTranslator translator
	GraphvizDotfileCreator fileCreator

	@OutputFile
	File graphDotFile = new File("tmp.gv")

	@TaskAction
	void createDotfile() {
		def dependenciesGroupedByModule = dependencyGatherer.lookupDependencies()

		def graphEntries = translator.translateDependenciesToDotLanguage(dependenciesGroupedByModule)

		fileCreator.createDirectedGraphFile(graphDotFile, graphEntries)
	}
}

interface DependencyGatherer {
	Map<String, Set<String>> lookupDependencies()
}

class MavenDependencyGatherer implements DependencyGatherer {
	List<File> pomFiles
	String dependencyRegex

	Map<String, Set<String>> lookupDependencies() {
		new MavenPomParser().parseMatchingDependencies(pomFiles, dependencyRegex)
	}
}