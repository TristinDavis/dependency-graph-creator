import groovy.io.FileType

// now run
// groovy dependencies.groovy '.*acquisition.*' && dot tmp.gv -Tsvg > tmp.svg

task createDependencyGraph(type: CreateDependencyGraph) {
	dependencyGatherer = new MavenDependencyGatherer(rootPomFile: new File(rootDirOfProjectToSearch + '/pom.xml'), dependencyRegex: dependencyRegex)
	translator = new DependencyToDotLanguageTranslator()
	fileCreator = new GraphvizDotfileCreator()
}

class CreateDependencyGraph extends DefaultTask {
	DependencyGatherer dependencyGatherer
	DependencyToDotLanguageTranslator translator
	GraphvizDotfileCreator fileCreator

	@OutputFile
	File graphDotFile = new File("tmp.gv")

	@TaskAction
	void createDotfile() {
		def dependenciesGroupedByModule = dependencyGatherer.lookupDependencies()

		def graphEntries = translator.translateDependenciesToDotLanguage(dependenciesGroupedByModule)

		fileCreator.createDirectedGraphFile(graphDotFile, graphEntries)
	}
}

interface DependencyGatherer {
	Map<String, Set<String>> lookupDependencies()
}

class MavenDependencyGatherer implements DependencyGatherer {
	File rootPomFile
	String dependencyRegex

	Map<String, Set<String>> lookupDependencies() {
		new MavenMultiModulePomParser().parseMatchingDependencies(rootPomFile, dependencyRegex)
	}
}